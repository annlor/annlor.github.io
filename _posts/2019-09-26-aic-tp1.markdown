---
layout: post
title:  "tp1 AIC - introduction au TAL"
date:   2019-09-26 22:21:46 +0200
categories: ens aic
---

[English version below]

Vous disposez d'un (tout petit) [corpus de sous-titres de séries](https://perso.limsi.fr/annlor/enseignement/tbbt.tar.gz) en anglais, aux formats:
- srt: sous-titres avec indications temporelles
- xml: fichier XML regroupant les phrases, tokenisé
- txt: fichier texte (une phrase par ligne)


L'objectif de ce TP est de vous familiariser avec les différentes analyses de Traitement Automatique des Langues disponibles dans la librairie [CoreNLP](https://stanfordnlp.github.io/CoreNLP/) (en Java à l'origine mais vous pouvez trouver des surcouches Python [ici](https://github.com/Lynten/stanford-corenlp) ou [là](https://github.com/dasmith/stanford-corenlp-python) par exemple) ou la librairie [nltk](http://www.nltk.org/) (python mais moins puissante en TAL).
Vous pouvez aussi utiliser l'[interface web de CoreNLP](corenlp.run) si elle fonctionne...

Vous testerez donc les analyses suivantes:
- segmentation en mots (tokenisation)
- segmentation en phrases
- annotation en parties du discours ou étiquetage morpho-syntaxique (PoS tagging)
- lemmatisation
- reconnaissance d'entités nommées
- analyse syntaxique en constituants (constituency parsing)
- analyse syntaxique en dépendances (dependency parsing)
- résolution de coréférence (avec CoreNLP uniquement)

À partir du corpus proposé, vous devrez définir un objectif d'analyse de ce corpus, et déterminer quelles sont les analyses TAL pertinentes pour le réaliser. L'objectif doit bien évidemment pouvoir s'appuyer sur l'analyse du corpus.

Voici quelques exemples d'objectifs:
- déterminer quels sont les qualificatifs principaux attribués au personnage de Sheldon Cooper;
- déterminer quelle est la couleur de vêtements la plus souvent citée;
- établir les relations sociales ou familiales (ami, soeur...) entre les personnages évoqués...

Il n'est pas (nécessairement) demandé d'implémenter un programme fonctionnel, mais seulement de déterminer quelles sont les informations utiles pour l'objectif choisi.

Ce TP fera l'objet d'un mini-compte rendu (format .txt) que vous [m'enverrez](mailto:annlor@limsi.fr) avec comme sujet [MasterAIC] Compte rendu TP1.

Ce compte rendu devra mentionner:
- l'objectif du programme visé
- le type d'analyses pertinentes
- l'utilisation de ces analyses dans le programme imaginé
- une proposition d'évaluation de ce programme (comment connaître ses performances ?)

Par exemple, si l'objectif est de faire la liste des superhéros évoqués dans la série, les indications suivantes pourront être données (les informations données ci-dessous ne sont pas nécessairement optimales, mais sont données à titre d'exemple et devraient évidemment être plus détaillées):
- objectif: obtenir la liste des superhéros les plus évoqués dans la série
- a priori, l'analyse en entités nommées devrait permettre de filtrer des mentions de personnages (à vérifier pour les personnages imaginaires; sinon on peut récupérer les noms propres avec l'étiquetage morpho-syntaxique)
- ces entités devront être regroupées (Hulk, The Hulk, Brunce Banner...), leur appartenance à une catégorie Super Héros de Wikipédia devra être testée, et leur nombre d'occurrences trié par ordre décroissant
- afin d'évaluer la reconnaissance des mentions de superhéros, on pourra par exemple annoter un épisode (i.e. indiquer les mots qui correspondent à des mentions de superhéros) que l'on n'utilisera pas pour développer le programme, mais que l'on utilisera comme test du programme uniquement

------
The data is a (very small) corpus of English subtitles, in the formats:

- srt: subtitles with time indications
- xml: XML file with sentences, tokenized
- txt: text file (one sentence per line)

The objective is to get acquainted with the various analyzes of Natural  Language Processing available in the [CoreNLP library](https://stanfordnlp.github.io/CoreNLP/) (in Java originally but you can find Python wrapper [here](https://github.com/Lynten/stanford-corenlp) or there for example) or the [nltk library] (http://www.nltk.org/) (python but less powerful in TAL).
You can also use [CoreNLP's web interface](corenlp.run) if it works...

You will test the following analyzes:

- tokenization
- sentence segmentation
- part-of-speech tagging
- stemming
- Named entity recognition
- constituency parsing
- dependency parsing
- coreference resolution (with CoreNLP only)

From the proposed corpus, you will define a possible analysis of this corpus, and determine which are the relevant TAL analyzes to realize it. The objective must obviously be able to rely on the corpus analysis.

Here are some examples of goals:

- determine which are the main qualifiers attributed to Sheldon Cooper's character
- determine which color of clothing is most often cited
- establish social or family relationships (friend, sister...) between the characters mentioned ...

Implement a functional program is not required (but can of course be done...), the goal being only to determine which information is useful for the chosen objective.

A report will be written (format .txt) and sent with the following subject: [MasterAIC] Rapport TP1.

This report should mention:

- the objective of the program
- the type of relevant analyzes
- how the analyzes should be used in the program
- a evaluation method for this program (how to know its performance?)

For example, if the objective is to list the superheroes mentioned in the series, the following indications may be given (the information given below is not necessarily optimal, but is given as an example and should obviously be more detailed):

- goal: get the list of superheroes that are the most mentioned in the series
- named entity recognition should allow to filter mentions of characters (to check for the imaginary characters, otherwise use proper names from POS tagging?)
- these entities will have to be grouped (Hulk, The Hulk, Brunce Banner ...), the possible Superhero category of Wikipedia will have to be tested, and their number of occurrences sorted in descending order
- in order to evaluate the recognition of the superhero mentions, an episode could be annotated (with the words which correspond to mentions of superheroes) which will not be used to develop the program, but as a test of the program only